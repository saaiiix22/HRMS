const mongoose = require('mongoose');

const empDesignationSchema = new mongoose.Schema({
  empOfficeMapId: Number,
  empMstObj: {
    employeeId: Number,
    employeeName: String,
    employeeCode: String,
    fatherName: String,
    userMaster: {
      userId: Number,
      loginId: String,
      password: String,
      userFullName: String,
      addnlParam: String,
      createdBy: Number,
      createdDateTime: Date,
      isTempPwd: String,
      tempPwdChangedOn: Date,
      open: Boolean,
      active: Boolean
    },
    bmEmpMaster: mongoose.Schema.Types.Mixed,
    gender: String,
    birthDate: Date,
    joiningDate: Date,
    mobileNo: String,
    mobileNoAlternate: String,
    mobileNoEmergency: String,
    panNo: String,
    uanNo: String,
    pfAcNo: String,
    aadharNo: String,
    officeEmail: String,
    alternateEmail: String,
    status: String,
    serviceStatusId: Number,
    serviceEndDate: Date,
    employeeTypeId: Number,
    bloodGroupId: mongoose.Schema.Types.Mixed,
    maritalStatusId: Number,
    marriageDate: Date,
    nationalityId: Number,
    religionId: Number,
    categoryId: mongoose.Schema.Types.Mixed,
    languageKnown: String,
    passportNo: String,
    pssptExpiryDate: Date,
    isAdminUser: String,
    salaryToProcess: String,
    uploadedDocPath: String,
    profilePhotoName: String,
    aadhaarDocName: String,
    panDocName: String,
    cbyUser: {
      userId: Number,
      loginId: String,
      password: String,
      userFullName: String,
      addnlParam: String,
      createdBy: Number,
      createdDateTime: Date,
      isTempPwd: String,
      tempPwdChangedOn: Date,
      open: Boolean,
      active: Boolean
    },
    createdDate: Date,
    lubyUser: mongoose.Schema.Types.Mixed,
    lastUpdatedDate: Date,
    resignationDate: Date,
    customLoginId: String,
    designationName: String,
    departmentName: String,
    bankAcNo: String,
    bankId: Number,
    branchName: String,
    ifscCode: String,
    bothAddressSameFlag: Boolean,
    presAddressLine: String,
    presCityName: String,
    presPincode: String,
    presDistrictId: Number,
    presStateId: Number,
    permAddressLine: String,
    permCityName: String,
    permPincode: String,
    permDistrictId: Number,
    permStateId: Number,
    successMsg: String,
    uploadedTempPath: String
  },
  ofcMstObj: {
    officeId: Number,
    officeName: String,
    officeCode: String,
    officeDisplayName: String,
    displayOrder: Number,
    officeTypeId: {
      officeTypeId: Number,
      officeCode: String,
      officeTypeName: String,
      status: String,
      createdBy: Object,
      createdDate: Date,
      modifiedBy: Object,
      modifiedDate: Date
    },
    officeAddress: String,
    description: String,
    countryId: {
      countryId: Number,
      countryCode: String,
      countryName: String
    },
    stateId: {
      stateId: Number,
      stateCode: String,
      stateName: String,
      stateCodeForGst: String,
      countryMaster: Object
    },
    cityId: {
      cityId: Number,
      cityCode: String,
      cityName: String,
      stateMaster: Object,
      cityType: String,
      cityStatus: String,
      user: Object,
      date: Date
    },
    pincode: Number,
    status: String,
    createdBy: Object,
    createdDate: Date,
    modifiedBy: mongoose.Schema.Types.Mixed,
    modifiedDate: mongoose.Schema.Types.Mixed,
    tanNo: mongoose.Schema.Types.Mixed,
    panNo: mongoose.Schema.Types.Mixed,
    gstRegdNo: mongoose.Schema.Types.Mixed,
    gstRegdType: String,
    gstRegdDt: mongoose.Schema.Types.Mixed
  },
  deptMstObj: {
    departmentId: Number,
    departmentName: String,
    departmentCode: String,
    status: String,
    description: String,
    cbyUser: Object,
    createdDate: Date,
    lubyUser: mongoose.Schema.Types.Mixed,
    lastUpdatedDate: mongoose.Schema.Types.Mixed
  },
  sectionMstObj: mongoose.Schema.Types.Mixed,
  roleMstObj: {
    roleId: Number,
    roleCode: String,
    displayName: String,
    roleLevel: Number,
    description: String,
    displayOnPage: String,
    status: String,
    designation: Boolean
  },
  status: String,
  isCurrentRole: Number,
  primary: Boolean,
  accessLevel: Number,
  fromDate: Date,
  toDate: mongoose.Schema.Types.Mixed
});


module.exports = empDesignationSchema